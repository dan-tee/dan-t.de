
# from https://gist.github.com/davejamesmiller/2016396

desc 'Push git repository to server'
task :git_push do
  # there should be a shorter way to do this
  logger = SSHKit::Backend::Printer.new(SSHKit::Host.new('localhost'))

  on roles(:web) do
    # Check for any local changes that haven't been committed
    # Use 'cap deploy:push IGNORE_DEPLOY_RB=1' to ignore changes to this file (for testing)
    status = %x(git status --porcelain).chomp
    if status != ''
      if status !~ %r{^[M ][M ] config/deploy.rb$}
        logger.error 'Local git repository has uncommitted changes'
      elsif !ENV['IGNORE_DEPLOY_RB']
        # This is used for testing changes to this script without committing them first
        logger.error 'Local git repository has uncommitted changes (set IGNORE_DEPLOY_RB=1 to ignore changes to deploy.rb)'
      end
    end

    # Check we are on the master branch, so we can't forget to merge before deploying
    branch = %x(git branch --no-color 2>/dev/null | sed -e '/^[^*]/d' -e 's/* \\(.*\\)/\\1/').chomp
    if branch != 'master' && !ENV['IGNORE_BRANCH']
      logger.error 'Not on master branch (set IGNORE_BRANCH=1 to ignore)'
    end

    # Push the changes
    unless system "git push #{fetch(:repository)} master"
      logger.error "Failed to push changes to #{fetch(:repository)}"
    end
  end
end